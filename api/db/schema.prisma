// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
model User {
  id            Int    @id @default(autoincrement())
  esnEmail      String @unique
  personalEmail String @unique
}

model Person {
  id            Int            @id @default(autoincrement())
  firstname     String
  lastname      String
  registrations Registration[]
  payments      Payment[]
}

model Registration {
  id       Int       @id @default(autoincrement())
  person   Person    @relation(fields: [personId], references: [id])
  personId Int       @unique
  payments Payment[]
}

model Payment {
  id             Int          @id @default(autoincrement())

  person         Person       @relation(fields: [personId], references: [id])
  personId       Int          @unique
  registration   Registration @relation(fields: [registrationId], references: [id])
  registrationId Int          @unique

  amount Int
  type PaymentMethod
}

enum PaymentMethod {
  CASH
  CARD
}
